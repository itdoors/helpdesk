<?php

/**
 * DepartmentPeopleTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class DepartmentPeopleTable extends Doctrine_Table
{
  /**
   * Returns an instance of this class.
   *
   * @return object DepartmentPeopleTable
   */
  public static function getInstance()
  {
      return Doctrine_Core::getTable('DepartmentPeople');
  }

  static public function getPeople($departmentIds, $year, $month, $departmentPeopleId = null, $departmentPeopleReplacementId = null)
  {
    $peopleIds = GrafikTable::getPeopleIds($departmentIds, $year, $month, $departmentPeopleId, $departmentPeopleReplacementId);

    if (!sizeof($peopleIds))
    {
      return array();
    }

    /** @var Doctrine_Collection $query */
    $query = self::getInstance()
      ->createQuery('dp')
      //->leftJoin('dp.Position as position')
      ->whereIn('dp.id', $peopleIds)
      ->orderBy('dp.id ASC')
      ->execute();

    if (!sizeof($query))
    {
      return array();
    }

    /** @var Doctrine_Collection $monthInfoCollection */
    $queryMonth = Doctrine::getTable('DepartmentPeopleMonthInfo')
      ->createQuery('dpmi')
      ->whereIn('dpmi.department_people_id', $peopleIds)
      ->addWhere('dpmi.year = ? ', $year)
      ->addWhere('dpmi.month = ? ', $month)
      ->leftJoin('dpmi.DepartmentPeople dp')
      ->orderBy('dp.last_name ASC');

    if (!is_null($departmentPeopleReplacementId))
    {
      $queryMonth
        ->addWhere('dpmi.department_people_replacement_id = ?', $departmentPeopleReplacementId);
    }

    $monthInfoCollection = $queryMonth->execute();

    if (!sizeof($monthInfoCollection))
    {
      return array();
    }

    $result = array();

    $peopleArray = $query->toKeyValueArray('id', 'itself');

    foreach ($monthInfoCollection as $info) /** @var DepartmentPeopleMonthInfo $info */
    {
      $personId = $info->getDepartmentPeopleId();
      $year = $info->getYear();
      $month = $info->getMonth();
      $replacementId = $info->getDepartmentPeopleReplacementId();

      if (!isset($peopleArray[$personId]))
      {
        continue;
      }

      /** @var DepartmentPeople $person */
      $person = clone $peopleArray[$personId];

      $person->setYearMonthReplacement($year, $month, $replacementId);

      $result[] = $person;
    }

    return $result;
  }

  /**
   * Get all people for $departmentIds in array with departmentId key
   *
   * @param int|int[] $departmentIds
   * @param int $year
   * @param int $month
   * @return mixed[]
   */
  static public function getPeopleArrayByDepartmentIdKey($departmentIds, $year, $month)
  {
    $people = self::getPeople($departmentIds, $year, $month);

    $result = array();

    foreach($people as $person)
    {
      if (!isset($result[$person->getDepartmentId()]))
      {
        $result[$person->getDepartmentId()] = array();
      }

      $result[$person->getDepartmentId()][] = $person;
    }

    return $result;
  }
}