<?php

/**
 * Handling
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    helpdesk
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Handling extends PluginHandling
{
  static public function getSessionOrganizationId()
  {
    $filters = sfContext::getInstance()->getUser()->getAttribute('handling.filter');

    return isset($filters['organization_id']) ? $filters['organization_id'] : null;
  }

  public function getCreatedatetimeGood()
  {
    return format_date($this->getCreatedatetime(), 'dd.MM.yyyy, HH:mm', 'ru');
  }

  public function getStatusChangeDateGood()
  {
    sfContext::getInstance()->getConfiguration()->loadHelpers('Date');
    return format_date($this->getStatusChangeDate(), 'dd.MM.yyyy, HH:mm', 'ru');
  }

  public function History($field = null, $toString  = null, $oldValue = null)
  {
    if (!$field||!$toString) return null;

    if (!sizeof($this->_oldValues))
    {
      return;
    }
    $history = new History();

    $history->setModelName(History::MODEL_HANDLING);
    $history->setModelId($this->getId());
    $history->setFieldName($field);

    //$history->setMore();
    $history->setOldValue(isset($this->_oldValues[$field]) ? $this->_oldValues[$field] : $this->$toString());
    $history->setValue($this->$toString());
    $history->save();
  }

  public function getStatusWithDate()
  {
    $result = $this->getStatus() ? $this->getStatus()->getName() : '';
    $result .= $this->getStatusChangeDate() ? ' ('.$this->getStatusChangeDateGood().')' : '';

    return $result;
  }

  public function getBudgetClientString()
  {
    $result = $this->getBudgetClient().' ';

    return $result;
  }

  public function getTypeName()
  {
    $result = $this->getType() ? $this->getType()->getName() : '';

    return $result;
  }

  public function getResultName()
  {
    return $this->getResult() ? $this->getResult()->getName() : '';
  }

  public function getResultNameWithLink()
  {
    $resultSlug = HandlingResult::getSlugById($this->getResultId());

    if (!$this->getResultId() || !$resultSlug)
    {
      return $this->getResultName();
    }

    $i18n = sfContext::getInstance()->getI18N();
    sfContext::getInstance()->getConfiguration()->loadHelpers('Url');

    $link = '<a class="show_more_info" href="'.url_for('handling_more_info', array('handlingId' => $this->getId(), 'type'=>$resultSlug)).'">'.$i18n->__('Show more info').'</a>';

    return $this->getResult() ? $this->getResult()->getName() . ' ' . $link : '';
  }

  public function selectLastHandlingDate()
  {
    $lastHandlingDate = Doctrine::getTable('HandlingMessage')
      ->createQuery('hm')
      ->where('hm.handling_id = ? ', $this->getId())
      ->orderBy('hm.createdate DESC')
      ->fetchOne();

    return $lastHandlingDate ? $lastHandlingDate->getCreatedate() : null;
  }

  public function recountLastHandlingDate()
  {
    $lastHandlingDate = $this->selectLastHandlingDate();

    if (!$lastHandlingDate)
    {
      return;
    }

    $this->setLastHandlingDate($lastHandlingDate);
    $this->save();

    return $lastHandlingDate;
  }

  static public function getSoledDogovorsQuery($params)
  {
    $fromDate = $params['date_range']['from']['year'].'-'.$params['date_range']['from']['month'].'-'.$params['date_range']['from']['day'].' 0:0:0';
    $toDate = $params['date_range']['to']['year'].'-'.$params['date_range']['to']['month'].'-'.$params['date_range']['to']['day'].' 23:59:59';

    $dateType = $params['date_type'];

    $q = Doctrine::getTable('Dogovor')
      ->createQuery('d')
      ->where('d.'.$dateType.' >= ?', $fromDate)
      ->addWhere('d.'.$dateType.' <= ?', $toDate)
      ->innerJoin('d.DogovorHandling dh')
      ->leftJoin('dh.Handling h')
      ->leftJoin('d.Stuff stuff')
      ->leftJoin('stuff.Users user');
      //->execute();

    return $q;
  }

  static public function getMoreInfo($params)
  {
    $fromDate = $params['date_range']['from']['year'].'-'.$params['date_range']['from']['month'].'-'.$params['date_range']['from']['day'].' 0:0:0';
    $toDate = $params['date_range']['to']['year'].'-'.$params['date_range']['to']['month'].'-'.$params['date_range']['to']['day'].' 23:59:59';

    $resultType = $params['type'];

    $resultId = HandlingResult::getIdBySlug($resultType);

    $q = Doctrine::getTable('Handling')
      ->createQuery('h')
      ->where('h.status_change_date >= ?', $fromDate)
      ->addWhere('h.status_change_date <= ?', $toDate)
      ->addWhere('h.result_id = ?', $resultId)
      ->leftJoin('h.HandlingUser hu')
      ->leftJoin('h.Result hr')
      ->leftJoin('hu.User manager')
      ->leftJoin('h.Status status')
      ->leftJoin('h.Organization o')
      ->leftJoin('h.User users')
      ->leftJoin('o.Scope scope')
      ->execute();

    return $q;
  }

  static public function getMoreInfoLostQuery($params)
  {
    $fromDate = $params['date_range']['from']['year'].'-'.$params['date_range']['from']['month'].'-'.$params['date_range']['from']['day'].' 0:0:0';
    $toDate = $params['date_range']['to']['year'].'-'.$params['date_range']['to']['month'].'-'.$params['date_range']['to']['day'].' 23:59:59';

    $resultIds = array(
      HandlingResult::getIdBySlug(HandlingResult::TYPE_LOST),
      HandlingResult::getIdBySlug(HandlingResult::TYPE_COMPETITOR),
    );

    $q = Doctrine::getTable('Handling')
      ->createQuery('h')
      ->whereIn('h.result_id', $resultIds)
      ->addWhere('h.status_change_date >= ?', $fromDate)
      ->addWhere('h.status_change_date <= ?', $toDate)
      ->leftJoin('h.HandlingUser hu')
      ->leftJoin('h.Result hr')
      ->leftJoin('hu.User manager')
      ->leftJoin('h.Status status')
      ->leftJoin('h.Organization o')
      ->leftJoin('h.User users')
      ->leftJoin('o.Scope scope');
      //->execute();

    return $q;
  }

  public function recountCreatedate()
  {
    $this->setCreatedate($this->getCreatedatetime());
    $this->save();
  }
}
