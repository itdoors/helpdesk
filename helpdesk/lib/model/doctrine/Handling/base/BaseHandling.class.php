<?php

/**
 * BaseHandling
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $number
 * @property timestamp $createdatetime
 * @property date $createdate
 * @property integer $status_id
 * @property integer $type_id
 * @property string $status_description
 * @property timestamp $status_change_date
 * @property date $last_handling_date
 * @property string $service_offered
 * @property string $budget
 * @property string $budget_client
 * @property float $square
 * @property string $chance
 * @property string $worktime_withclient
 * @property string $description
 * @property string $result_string
 * @property integer $result_id
 * @property boolean $status_admin
 * @property integer $user_id
 * @property integer $organization_id
 * @property boolean $is_closed
 * @property organization $Organization
 * @property sfGuardUser $User
 * @property HandlingStatus $Status
 * @property HandlingType $Type
 * @property HandlingResult $Result
 * @property Doctrine_Collection $DogovorHandling
 * @property Doctrine_Collection $HandlingMessage
 * @property Doctrine_Collection $HandlingUser
 * @property Doctrine_Collection $HandlingMoreInfo
 * 
 * @method integer             getId()                  Returns the current record's "id" value
 * @method string              getNumber()              Returns the current record's "number" value
 * @method timestamp           getCreatedatetime()      Returns the current record's "createdatetime" value
 * @method date                getCreatedate()          Returns the current record's "createdate" value
 * @method integer             getStatusId()            Returns the current record's "status_id" value
 * @method integer             getTypeId()              Returns the current record's "type_id" value
 * @method string              getStatusDescription()   Returns the current record's "status_description" value
 * @method timestamp           getStatusChangeDate()    Returns the current record's "status_change_date" value
 * @method date                getLastHandlingDate()    Returns the current record's "last_handling_date" value
 * @method string              getServiceOffered()      Returns the current record's "service_offered" value
 * @method string              getBudget()              Returns the current record's "budget" value
 * @method string              getBudgetClient()        Returns the current record's "budget_client" value
 * @method float               getSquare()              Returns the current record's "square" value
 * @method string              getChance()              Returns the current record's "chance" value
 * @method string              getWorktimeWithclient()  Returns the current record's "worktime_withclient" value
 * @method string              getDescription()         Returns the current record's "description" value
 * @method string              getResultString()        Returns the current record's "result_string" value
 * @method integer             getResultId()            Returns the current record's "result_id" value
 * @method boolean             getStatusAdmin()         Returns the current record's "status_admin" value
 * @method integer             getUserId()              Returns the current record's "user_id" value
 * @method integer             getOrganizationId()      Returns the current record's "organization_id" value
 * @method boolean             getIsClosed()            Returns the current record's "is_closed" value
 * @method organization        getOrganization()        Returns the current record's "Organization" value
 * @method sfGuardUser         getUser()                Returns the current record's "User" value
 * @method HandlingStatus      getStatus()              Returns the current record's "Status" value
 * @method HandlingType        getType()                Returns the current record's "Type" value
 * @method HandlingResult      getResult()              Returns the current record's "Result" value
 * @method Doctrine_Collection getDogovorHandling()     Returns the current record's "DogovorHandling" collection
 * @method Doctrine_Collection getHandlingMessage()     Returns the current record's "HandlingMessage" collection
 * @method Doctrine_Collection getHandlingUser()        Returns the current record's "HandlingUser" collection
 * @method Doctrine_Collection getHandlingMoreInfo()    Returns the current record's "HandlingMoreInfo" collection
 * @method Handling            setId()                  Sets the current record's "id" value
 * @method Handling            setNumber()              Sets the current record's "number" value
 * @method Handling            setCreatedatetime()      Sets the current record's "createdatetime" value
 * @method Handling            setCreatedate()          Sets the current record's "createdate" value
 * @method Handling            setStatusId()            Sets the current record's "status_id" value
 * @method Handling            setTypeId()              Sets the current record's "type_id" value
 * @method Handling            setStatusDescription()   Sets the current record's "status_description" value
 * @method Handling            setStatusChangeDate()    Sets the current record's "status_change_date" value
 * @method Handling            setLastHandlingDate()    Sets the current record's "last_handling_date" value
 * @method Handling            setServiceOffered()      Sets the current record's "service_offered" value
 * @method Handling            setBudget()              Sets the current record's "budget" value
 * @method Handling            setBudgetClient()        Sets the current record's "budget_client" value
 * @method Handling            setSquare()              Sets the current record's "square" value
 * @method Handling            setChance()              Sets the current record's "chance" value
 * @method Handling            setWorktimeWithclient()  Sets the current record's "worktime_withclient" value
 * @method Handling            setDescription()         Sets the current record's "description" value
 * @method Handling            setResultString()        Sets the current record's "result_string" value
 * @method Handling            setResultId()            Sets the current record's "result_id" value
 * @method Handling            setStatusAdmin()         Sets the current record's "status_admin" value
 * @method Handling            setUserId()              Sets the current record's "user_id" value
 * @method Handling            setOrganizationId()      Sets the current record's "organization_id" value
 * @method Handling            setIsClosed()            Sets the current record's "is_closed" value
 * @method Handling            setOrganization()        Sets the current record's "Organization" value
 * @method Handling            setUser()                Sets the current record's "User" value
 * @method Handling            setStatus()              Sets the current record's "Status" value
 * @method Handling            setType()                Sets the current record's "Type" value
 * @method Handling            setResult()              Sets the current record's "Result" value
 * @method Handling            setDogovorHandling()     Sets the current record's "DogovorHandling" collection
 * @method Handling            setHandlingMessage()     Sets the current record's "HandlingMessage" collection
 * @method Handling            setHandlingUser()        Sets the current record's "HandlingUser" collection
 * @method Handling            setHandlingMoreInfo()    Sets the current record's "HandlingMoreInfo" collection
 * 
 * @package    helpdesk
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseHandling extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('handling');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('number', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('createdatetime', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('createdate', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('status_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('type_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('status_description', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('status_change_date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('last_handling_date', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('service_offered', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('budget', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('budget_client', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('square', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('chance', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('worktime_withclient', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('result_string', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('result_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('status_admin', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('organization_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('is_closed', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('organization as Organization', array(
             'local' => 'organization_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('HandlingStatus as Status', array(
             'local' => 'status_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('HandlingType as Type', array(
             'local' => 'type_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('HandlingResult as Result', array(
             'local' => 'result_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('DogovorHandling', array(
             'local' => 'id',
             'foreign' => 'handling_id'));

        $this->hasMany('HandlingMessage', array(
             'local' => 'id',
             'foreign' => 'handling_id'));

        $this->hasMany('HandlingUser', array(
             'local' => 'id',
             'foreign' => 'handling_id'));

        $this->hasMany('HandlingMoreInfo', array(
             'local' => 'id',
             'foreign' => 'handling_id'));
    }
}