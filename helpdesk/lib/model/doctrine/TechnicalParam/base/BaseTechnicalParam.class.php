<?php

/**
 * BaseTechnicalParam
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property integer $type_id
 * @property integer $sort
 * @property string $unit
 * @property TechnicalParamType $TechnicalParamType
 * @property Doctrine_Collection $TechnicalParamDepartments
 * 
 * @method integer             getId()                        Returns the current record's "id" value
 * @method string              getName()                      Returns the current record's "name" value
 * @method integer             getTypeId()                    Returns the current record's "type_id" value
 * @method integer             getSort()                      Returns the current record's "sort" value
 * @method string              getUnit()                      Returns the current record's "unit" value
 * @method TechnicalParamType  getTechnicalParamType()        Returns the current record's "TechnicalParamType" value
 * @method Doctrine_Collection getTechnicalParamDepartments() Returns the current record's "TechnicalParamDepartments" collection
 * @method TechnicalParam      setId()                        Sets the current record's "id" value
 * @method TechnicalParam      setName()                      Sets the current record's "name" value
 * @method TechnicalParam      setTypeId()                    Sets the current record's "type_id" value
 * @method TechnicalParam      setSort()                      Sets the current record's "sort" value
 * @method TechnicalParam      setUnit()                      Sets the current record's "unit" value
 * @method TechnicalParam      setTechnicalParamType()        Sets the current record's "TechnicalParamType" value
 * @method TechnicalParam      setTechnicalParamDepartments() Sets the current record's "TechnicalParamDepartments" collection
 * 
 * @package    helpdesk
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTechnicalParam extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('technical_param');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('type_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('sort', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('unit', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TechnicalParamType', array(
             'local' => 'type_id',
             'foreign' => 'id'));

        $this->hasMany('TechnicalParamDepartments', array(
             'local' => 'id',
             'foreign' => 'param_id'));
    }
}