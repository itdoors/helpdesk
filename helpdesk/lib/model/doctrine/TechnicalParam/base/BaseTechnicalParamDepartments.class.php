<?php

/**
 * BaseTechnicalParamDepartments
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $department_id
 * @property integer $param_id
 * @property string $value
 * @property date $date
 * @property TechnicalParam $TechnicalParamType
 * @property departments $Departments
 * 
 * @method integer                   getDepartmentId()       Returns the current record's "department_id" value
 * @method integer                   getParamId()            Returns the current record's "param_id" value
 * @method string                    getValue()              Returns the current record's "value" value
 * @method date                      getDate()               Returns the current record's "date" value
 * @method TechnicalParam            getTechnicalParamType() Returns the current record's "TechnicalParamType" value
 * @method departments               getDepartments()        Returns the current record's "Departments" value
 * @method TechnicalParamDepartments setDepartmentId()       Sets the current record's "department_id" value
 * @method TechnicalParamDepartments setParamId()            Sets the current record's "param_id" value
 * @method TechnicalParamDepartments setValue()              Sets the current record's "value" value
 * @method TechnicalParamDepartments setDate()               Sets the current record's "date" value
 * @method TechnicalParamDepartments setTechnicalParamType() Sets the current record's "TechnicalParamType" value
 * @method TechnicalParamDepartments setDepartments()        Sets the current record's "Departments" value
 * 
 * @package    helpdesk
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTechnicalParamDepartments extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('technical_param_departments');
        $this->hasColumn('department_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('param_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('value', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('date', 'date', null, array(
             'type' => 'date',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TechnicalParam as TechnicalParamType', array(
             'local' => 'param_id',
             'foreign' => 'id'));

        $this->hasOne('departments as Departments', array(
             'local' => 'department_id',
             'foreign' => 'id'));
    }
}