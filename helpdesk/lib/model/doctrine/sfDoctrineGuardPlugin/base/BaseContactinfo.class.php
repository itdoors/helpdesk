<?php

/**
 * BaseContactinfo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property Doctrine_Collection $Users
 * @property Doctrine_Collection $UserContactinfo
 * 
 * @method integer             getId()              Returns the current record's "id" value
 * @method string              getName()            Returns the current record's "name" value
 * @method Doctrine_Collection getUsers()           Returns the current record's "Users" collection
 * @method Doctrine_Collection getUserContactinfo() Returns the current record's "UserContactinfo" collection
 * @method Contactinfo         setId()              Sets the current record's "id" value
 * @method Contactinfo         setName()            Sets the current record's "name" value
 * @method Contactinfo         setUsers()           Sets the current record's "Users" collection
 * @method Contactinfo         setUserContactinfo() Sets the current record's "UserContactinfo" collection
 * 
 * @package    helpdesk
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseContactinfo extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('contactinfo');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('sfGuardUser as Users', array(
             'refClass' => 'UserContactinfo',
             'local' => 'contactinfo_id',
             'foreign' => 'user_id'));

        $this->hasMany('UserContactinfo', array(
             'local' => 'id',
             'foreign' => 'contactinfo_id'));
    }
}