<?php

/**
 * BaseUserContactinfo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $contactinfo_id
 * @property integer $user_id
 * @property string $value
 * @property Contactinfo $Contactinfo
 * @property sfGuardUser $User
 * 
 * @method integer         getId()             Returns the current record's "id" value
 * @method integer         getContactinfoId()  Returns the current record's "contactinfo_id" value
 * @method integer         getUserId()         Returns the current record's "user_id" value
 * @method string          getValue()          Returns the current record's "value" value
 * @method Contactinfo     getContactinfo()    Returns the current record's "Contactinfo" value
 * @method sfGuardUser     getUser()           Returns the current record's "User" value
 * @method UserContactinfo setId()             Sets the current record's "id" value
 * @method UserContactinfo setContactinfoId()  Sets the current record's "contactinfo_id" value
 * @method UserContactinfo setUserId()         Sets the current record's "user_id" value
 * @method UserContactinfo setValue()          Sets the current record's "value" value
 * @method UserContactinfo setContactinfo()    Sets the current record's "Contactinfo" value
 * @method UserContactinfo setUser()           Sets the current record's "User" value
 * 
 * @package    helpdesk
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserContactinfo extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user_contactinfo');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('contactinfo_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('value', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Contactinfo', array(
             'local' => 'contactinfo_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}