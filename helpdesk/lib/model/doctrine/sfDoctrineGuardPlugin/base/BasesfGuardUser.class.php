<?php

/**
 * BasesfGuardUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $first_name
 * @property string $last_name
 * @property string $middle_name
 * @property string $position
 * @property string $email_address
 * @property string $username
 * @property date $birthday
 * @property string $algorithm
 * @property string $salt
 * @property string $password
 * @property boolean $is_active
 * @property boolean $is_blocked
 * @property boolean $is_fired
 * @property boolean $is_super_admin
 * @property timestamp $last_login
 * @property integer $sex_id
 * @property string $photo
 * @property string $about
 * @property stuff $Stuff
 * @property lookup $lookup
 * @property Doctrine_Collection $Groups
 * @property Doctrine_Collection $Permissions
 * @property Doctrine_Collection $DocGroups
 * @property Doctrine_Collection $sfGuardUserPermission
 * @property Doctrine_Collection $sfGuardUserGroup
 * @property sfGuardRememberKey $RememberKeys
 * @property sfGuardForgotPassword $ForgotPassword
 * @property Doctrine_Collection $Contactinfo
 * @property Doctrine_Collection $UserContactinfo
 * @property Doctrine_Collection $DocDocumentGroup
 * @property Doctrine_Collection $DocDocument
 * @property Doctrine_Collection $DocDocumentGroupSfUsers
 * @property Doctrine_Collection $DogovorStuff
 * @property Doctrine_Collection $DogovorUser
 * @property Doctrine_Collection $DogovorDepartment
 * @property Doctrine_Collection $Idea
 * @property Doctrine_Collection $GlobalMessage
 * @property Doctrine_Collection $Handling
 * @property Doctrine_Collection $HandlingMessage
 * @property Doctrine_Collection $HandlingUser
 * @property Doctrine_Collection $History
 * @property Doctrine_Collection $QueueLog
 * @property Doctrine_Collection $OrganizationUser
 * @property Doctrine_Collection $Client
 * @property Doctrine_Collection $Documents
 * @property Doctrine_Collection $LogClaim
 * @property Doctrine_Collection $Comments
 * @property Doctrine_Collection $ClaimUsers
 * 
 * @method integer               getId()                      Returns the current record's "id" value
 * @method string                getFirstName()               Returns the current record's "first_name" value
 * @method string                getLastName()                Returns the current record's "last_name" value
 * @method string                getMiddleName()              Returns the current record's "middle_name" value
 * @method string                getPosition()                Returns the current record's "position" value
 * @method string                getEmailAddress()            Returns the current record's "email_address" value
 * @method string                getUsername()                Returns the current record's "username" value
 * @method date                  getBirthday()                Returns the current record's "birthday" value
 * @method string                getAlgorithm()               Returns the current record's "algorithm" value
 * @method string                getSalt()                    Returns the current record's "salt" value
 * @method string                getPassword()                Returns the current record's "password" value
 * @method boolean               getIsActive()                Returns the current record's "is_active" value
 * @method boolean               getIsBlocked()               Returns the current record's "is_blocked" value
 * @method boolean               getIsFired()                 Returns the current record's "is_fired" value
 * @method boolean               getIsSuperAdmin()            Returns the current record's "is_super_admin" value
 * @method timestamp             getLastLogin()               Returns the current record's "last_login" value
 * @method integer               getSexId()                   Returns the current record's "sex_id" value
 * @method string                getPhoto()                   Returns the current record's "photo" value
 * @method string                getAbout()                   Returns the current record's "about" value
 * @method stuff                 getStuff()                   Returns the current record's "Stuff" value
 * @method lookup                getLookup()                  Returns the current record's "lookup" value
 * @method Doctrine_Collection   getGroups()                  Returns the current record's "Groups" collection
 * @method Doctrine_Collection   getPermissions()             Returns the current record's "Permissions" collection
 * @method Doctrine_Collection   getDocGroups()               Returns the current record's "DocGroups" collection
 * @method Doctrine_Collection   getSfGuardUserPermission()   Returns the current record's "sfGuardUserPermission" collection
 * @method Doctrine_Collection   getSfGuardUserGroup()        Returns the current record's "sfGuardUserGroup" collection
 * @method sfGuardRememberKey    getRememberKeys()            Returns the current record's "RememberKeys" value
 * @method sfGuardForgotPassword getForgotPassword()          Returns the current record's "ForgotPassword" value
 * @method Doctrine_Collection   getContactinfo()             Returns the current record's "Contactinfo" collection
 * @method Doctrine_Collection   getUserContactinfo()         Returns the current record's "UserContactinfo" collection
 * @method Doctrine_Collection   getDocDocumentGroup()        Returns the current record's "DocDocumentGroup" collection
 * @method Doctrine_Collection   getDocDocument()             Returns the current record's "DocDocument" collection
 * @method Doctrine_Collection   getDocDocumentGroupSfUsers() Returns the current record's "DocDocumentGroupSfUsers" collection
 * @method Doctrine_Collection   getDogovorStuff()            Returns the current record's "DogovorStuff" collection
 * @method Doctrine_Collection   getDogovorUser()             Returns the current record's "DogovorUser" collection
 * @method Doctrine_Collection   getDogovorDepartment()       Returns the current record's "DogovorDepartment" collection
 * @method Doctrine_Collection   getIdea()                    Returns the current record's "Idea" collection
 * @method Doctrine_Collection   getGlobalMessage()           Returns the current record's "GlobalMessage" collection
 * @method Doctrine_Collection   getHandling()                Returns the current record's "Handling" collection
 * @method Doctrine_Collection   getHandlingMessage()         Returns the current record's "HandlingMessage" collection
 * @method Doctrine_Collection   getHandlingUser()            Returns the current record's "HandlingUser" collection
 * @method Doctrine_Collection   getHistory()                 Returns the current record's "History" collection
 * @method Doctrine_Collection   getQueueLog()                Returns the current record's "QueueLog" collection
 * @method Doctrine_Collection   getOrganizationUser()        Returns the current record's "OrganizationUser" collection
 * @method Doctrine_Collection   getClient()                  Returns the current record's "Client" collection
 * @method Doctrine_Collection   getDocuments()               Returns the current record's "Documents" collection
 * @method Doctrine_Collection   getLogClaim()                Returns the current record's "LogClaim" collection
 * @method Doctrine_Collection   getComments()                Returns the current record's "Comments" collection
 * @method Doctrine_Collection   getClaimUsers()              Returns the current record's "ClaimUsers" collection
 * @method sfGuardUser           setId()                      Sets the current record's "id" value
 * @method sfGuardUser           setFirstName()               Sets the current record's "first_name" value
 * @method sfGuardUser           setLastName()                Sets the current record's "last_name" value
 * @method sfGuardUser           setMiddleName()              Sets the current record's "middle_name" value
 * @method sfGuardUser           setPosition()                Sets the current record's "position" value
 * @method sfGuardUser           setEmailAddress()            Sets the current record's "email_address" value
 * @method sfGuardUser           setUsername()                Sets the current record's "username" value
 * @method sfGuardUser           setBirthday()                Sets the current record's "birthday" value
 * @method sfGuardUser           setAlgorithm()               Sets the current record's "algorithm" value
 * @method sfGuardUser           setSalt()                    Sets the current record's "salt" value
 * @method sfGuardUser           setPassword()                Sets the current record's "password" value
 * @method sfGuardUser           setIsActive()                Sets the current record's "is_active" value
 * @method sfGuardUser           setIsBlocked()               Sets the current record's "is_blocked" value
 * @method sfGuardUser           setIsFired()                 Sets the current record's "is_fired" value
 * @method sfGuardUser           setIsSuperAdmin()            Sets the current record's "is_super_admin" value
 * @method sfGuardUser           setLastLogin()               Sets the current record's "last_login" value
 * @method sfGuardUser           setSexId()                   Sets the current record's "sex_id" value
 * @method sfGuardUser           setPhoto()                   Sets the current record's "photo" value
 * @method sfGuardUser           setAbout()                   Sets the current record's "about" value
 * @method sfGuardUser           setStuff()                   Sets the current record's "Stuff" value
 * @method sfGuardUser           setLookup()                  Sets the current record's "lookup" value
 * @method sfGuardUser           setGroups()                  Sets the current record's "Groups" collection
 * @method sfGuardUser           setPermissions()             Sets the current record's "Permissions" collection
 * @method sfGuardUser           setDocGroups()               Sets the current record's "DocGroups" collection
 * @method sfGuardUser           setSfGuardUserPermission()   Sets the current record's "sfGuardUserPermission" collection
 * @method sfGuardUser           setSfGuardUserGroup()        Sets the current record's "sfGuardUserGroup" collection
 * @method sfGuardUser           setRememberKeys()            Sets the current record's "RememberKeys" value
 * @method sfGuardUser           setForgotPassword()          Sets the current record's "ForgotPassword" value
 * @method sfGuardUser           setContactinfo()             Sets the current record's "Contactinfo" collection
 * @method sfGuardUser           setUserContactinfo()         Sets the current record's "UserContactinfo" collection
 * @method sfGuardUser           setDocDocumentGroup()        Sets the current record's "DocDocumentGroup" collection
 * @method sfGuardUser           setDocDocument()             Sets the current record's "DocDocument" collection
 * @method sfGuardUser           setDocDocumentGroupSfUsers() Sets the current record's "DocDocumentGroupSfUsers" collection
 * @method sfGuardUser           setDogovorStuff()            Sets the current record's "DogovorStuff" collection
 * @method sfGuardUser           setDogovorUser()             Sets the current record's "DogovorUser" collection
 * @method sfGuardUser           setDogovorDepartment()       Sets the current record's "DogovorDepartment" collection
 * @method sfGuardUser           setIdea()                    Sets the current record's "Idea" collection
 * @method sfGuardUser           setGlobalMessage()           Sets the current record's "GlobalMessage" collection
 * @method sfGuardUser           setHandling()                Sets the current record's "Handling" collection
 * @method sfGuardUser           setHandlingMessage()         Sets the current record's "HandlingMessage" collection
 * @method sfGuardUser           setHandlingUser()            Sets the current record's "HandlingUser" collection
 * @method sfGuardUser           setHistory()                 Sets the current record's "History" collection
 * @method sfGuardUser           setQueueLog()                Sets the current record's "QueueLog" collection
 * @method sfGuardUser           setOrganizationUser()        Sets the current record's "OrganizationUser" collection
 * @method sfGuardUser           setClient()                  Sets the current record's "Client" collection
 * @method sfGuardUser           setDocuments()               Sets the current record's "Documents" collection
 * @method sfGuardUser           setLogClaim()                Sets the current record's "LogClaim" collection
 * @method sfGuardUser           setComments()                Sets the current record's "Comments" collection
 * @method sfGuardUser           setClaimUsers()              Sets the current record's "ClaimUsers" collection
 * 
 * @package    helpdesk
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasesfGuardUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_guard_user');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('first_name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('last_name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('middle_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('position', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('email_address', 'string', 255, array(
             'unique' => true,
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('username', 'string', 128, array(
             'unique' => true,
             'type' => 'string',
             'notnull' => true,
             'length' => 128,
             ));
        $this->hasColumn('birthday', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('algorithm', 'string', 128, array(
             'default' => 'sha1',
             'type' => 'string',
             'notnull' => true,
             'length' => 128,
             ));
        $this->hasColumn('salt', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('password', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'default' => 1,
             'type' => 'boolean',
             ));
        $this->hasColumn('is_blocked', 'boolean', null, array(
             'default' => 0,
             'type' => 'boolean',
             ));
        $this->hasColumn('is_fired', 'boolean', null, array(
             'default' => 0,
             'type' => 'boolean',
             ));
        $this->hasColumn('is_super_admin', 'boolean', null, array(
             'default' => false,
             'type' => 'boolean',
             ));
        $this->hasColumn('last_login', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('sex_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('photo', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('about', 'string', null, array(
             'type' => 'string',
             ));


        $this->index('is_active_idx', array(
             'fields' => 
             array(
              0 => 'is_active',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('stuff as Stuff', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasOne('lookup', array(
             'local' => 'sex_id',
             'foreign' => 'id'));

        $this->hasMany('sfGuardGroup as Groups', array(
             'refClass' => 'sfGuardUserGroup',
             'local' => 'user_id',
             'foreign' => 'group_id'));

        $this->hasMany('sfGuardPermission as Permissions', array(
             'refClass' => 'sfGuardUserPermission',
             'local' => 'user_id',
             'foreign' => 'permission_id'));

        $this->hasMany('DocDocumentGroup as DocGroups', array(
             'refClass' => 'DocDocumentGroupSfUsers',
             'local' => 'sfguarduser_id',
             'foreign' => 'docdocumentgroup_id'));

        $this->hasMany('sfGuardUserPermission', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('sfGuardUserGroup', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasOne('sfGuardRememberKey as RememberKeys', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasOne('sfGuardForgotPassword as ForgotPassword', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Contactinfo', array(
             'refClass' => 'UserContactinfo',
             'local' => 'user_id',
             'foreign' => 'contactinfo_id'));

        $this->hasMany('UserContactinfo', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('DocDocumentGroup', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('DocDocument', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('DocDocumentGroupSfUsers', array(
             'local' => 'id',
             'foreign' => 'sfguarduser_id'));

        $this->hasMany('Dogovor as DogovorStuff', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('DopDogovor as DogovorUser', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('DogovorDepartment', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Idea', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('GlobalMessage', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Handling', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('HandlingMessage', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('HandlingUser', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('History', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('QueueLog', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('OrganizationUser', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('client as Client', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Documents', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('log_claim as LogClaim', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('comments as Comments', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('claimusers as ClaimUsers', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}