<?php

/**
 * comments
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    helpdesk
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class comments extends Basecomments
{
    
    public function save(Doctrine_Connection $conn = null)
    {
        $claim = $this->getClaim();
        if ($claim->getIsclosedclient()) $this->setIsvisible(true); 
        parent::save();
        //DONE 7: на сервер

    }
    
    public function __toString()
    {
        return $this->getId();
    }
    public function getUser()
    {
        $user = Doctrine::getTable('sfGuardUser')->find($this->user_id);
        return $user->__toString();
    }
    
    public function getCreatedatetimeGood()
    {
        return format_datetime($this->getCreatedatetime(), 't').', '.format_datetime($this->getCreatedatetime(), 'D');
    }
    
    public function saveManager($claim, $new_claim_id, $user_id = null)
    {
        if ($claim['message'] == '') return false; 
        $sf_user = sfContext::getInstance()->getUser();
        $user_id = ($user_id == -1) ? 0 : $sf_user->getAttribute('user_id',null, 'sfGuardSecurityUser');
        $this->claim_id = $new_claim_id;
        $this->user_id = $user_id;
        $this->setDescription($claim['message']);
        $this->createdatetime = date("Y-m-d H:i:s");
        if ($this->trySave()) return true;
        else return false; 
    }
    
    public function StuffOnly()
    {
        if ($this->isvisible) return __('Stuff only'); else return '';
    }
    

    public function sendMessageForAll($claim_id, $client = false, $kurator = false, $stuff = false)
    {
        $claim = Doctrine::getTable('claim')->find($claim_id);
        if (!$claim->getIsclosedclient())
        {
            if ($kurator) $kurator_email = $claim->sendKuratorEmail();
            if ($stuff) $stuff_email = $claim->sendStuffEmail();
            if ($client) {
               $client_email = $claim->sendClientEmail();  
            }
        }   
    }
    
    
    

}