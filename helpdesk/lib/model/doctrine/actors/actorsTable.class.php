<?php

/**
 * sfGuardUserTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class actorsTable extends sfGuardUserTable
{
    public function getActorsByKeywords($keywords)
    {
        $fio = $keywords['fio']; 
        $position = $keywords['position'];
        $city = $keywords['city'];
        $q = Doctrine::getTable('sfGuardUser')
        ->createQuery('u')
        ->select('u.first_name, u.last_name, u.position');

        //->leftJoin('u.Stuff s')
        //->where('u.id = s.id');
        $keywords_array = explode(' ', $fio);
        foreach ($keywords_array as $keyword)
        {
          if ($keyword&&strlen($keyword)>2)
          $q->orWhere('(LOWER(u.first_name) LIKE \''.mb_strtolower($fio, 'UTF-8').'%\' 
          OR LOWER(u.last_name) LIKE \''.mb_strtolower($fio, 'UTF-8').'%\'
          OR LOWER(u.username) LIKE \'%'.mb_strtolower($fio, 'UTF-8').'%\'
          OR LOWER(u.email_address) LIKE \'%'.mb_strtolower($fio, 'UTF-8').'%\')
          
          ');
          /*$q->orWhere('u.last_name LIKE \''.$keyword.'%\'');  
          $q->orWhere('u.username LIKE \''.$keyword.'%\'');  
          $q->orWhere('u.email_address LIKE \''.$keyword.'%\'');  */
        }
        if ($position)
        {
/*            $keyword_position = explode(' ', $position);
            foreach ($keyword_position as $keyword_pos)
            { 
                if ($keyword_pos&&strlen($keyword_pos)>2) $q->orWhere('LOWER(u.position) LIKE \'%'.mb_strtolower($keyword_pos, 'UTF-8').'%\''); 
            } */
            $q->andWhere('LOWER(u.position) LIKE \'%'.mb_strtolower($position, 'UTF-8').'%\''); 
        }
        if ($city)
        {
            //$q->addSelect();
            $q->leftJoin('u.Stuff stuff');
            $q->leftJoin('stuff.Companystructure cstr');
            $q->leftJoin('cstr.CompanystructureRegion cstr_reg');  
            $q->leftJoin('cstr_reg.Region reg');  
            $q->leftJoin('reg.City cit');  
            $q->addWhere('LOWER(cit.name) LIKE \'%'.mb_strtolower($city, 'UTF-8').'%\'');  
            
        }
        
        //die($q);
        return $q->execute();
    }
    
    

}