<?php

/**
 * BaseIdea
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property integer $user_id
 * @property timestamp $createdatetime
 * @property string $description
 * @property string $result
 * @property string $expert_description
 * @property integer $significance
 * @property integer $financial
 * @property integer $originality
 * @property integer $readiness
 * @property sfGuardUser $User
 * @property Doctrine_Collection $Goals
 * @property Doctrine_Collection $IdeaIdeaGoal
 * 
 * @method integer             getId()                 Returns the current record's "id" value
 * @method string              getName()               Returns the current record's "name" value
 * @method integer             getUserId()             Returns the current record's "user_id" value
 * @method timestamp           getCreatedatetime()     Returns the current record's "createdatetime" value
 * @method string              getDescription()        Returns the current record's "description" value
 * @method string              getResult()             Returns the current record's "result" value
 * @method string              getExpertDescription()  Returns the current record's "expert_description" value
 * @method integer             getSignificance()       Returns the current record's "significance" value
 * @method integer             getFinancial()          Returns the current record's "financial" value
 * @method integer             getOriginality()        Returns the current record's "originality" value
 * @method integer             getReadiness()          Returns the current record's "readiness" value
 * @method sfGuardUser         getUser()               Returns the current record's "User" value
 * @method Doctrine_Collection getGoals()              Returns the current record's "Goals" collection
 * @method Doctrine_Collection getIdeaIdeaGoal()       Returns the current record's "IdeaIdeaGoal" collection
 * @method Idea                setId()                 Sets the current record's "id" value
 * @method Idea                setName()               Sets the current record's "name" value
 * @method Idea                setUserId()             Sets the current record's "user_id" value
 * @method Idea                setCreatedatetime()     Sets the current record's "createdatetime" value
 * @method Idea                setDescription()        Sets the current record's "description" value
 * @method Idea                setResult()             Sets the current record's "result" value
 * @method Idea                setExpertDescription()  Sets the current record's "expert_description" value
 * @method Idea                setSignificance()       Sets the current record's "significance" value
 * @method Idea                setFinancial()          Sets the current record's "financial" value
 * @method Idea                setOriginality()        Sets the current record's "originality" value
 * @method Idea                setReadiness()          Sets the current record's "readiness" value
 * @method Idea                setUser()               Sets the current record's "User" value
 * @method Idea                setGoals()              Sets the current record's "Goals" collection
 * @method Idea                setIdeaIdeaGoal()       Sets the current record's "IdeaIdeaGoal" collection
 * 
 * @package    helpdesk
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseIdea extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('idea');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('createdatetime', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('result', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('expert_description', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('significance', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('financial', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('originality', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('readiness', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('IdeaGoal as Goals', array(
             'refClass' => 'IdeaIdeaGoal',
             'local' => 'idea_id',
             'foreign' => 'goal_id'));

        $this->hasMany('IdeaIdeaGoal', array(
             'local' => 'id',
             'foreign' => 'idea_id'));
    }
}