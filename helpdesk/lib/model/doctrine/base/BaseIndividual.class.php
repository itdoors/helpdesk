<?php

/**
 * BaseIndividual
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $guid
 * @property string $first_name
 * @property string $middle_name
 * @property string $last_name
 * @property date $birthday
 * @property string $tin
 * @property string $passport
 * @property string $phone
 * @property string $address
 * @property Doctrine_Collection $DepartmentPeople
 * 
 * @method integer             getId()               Returns the current record's "id" value
 * @method string              getGuid()             Returns the current record's "guid" value
 * @method string              getFirstName()        Returns the current record's "first_name" value
 * @method string              getMiddleName()       Returns the current record's "middle_name" value
 * @method string              getLastName()         Returns the current record's "last_name" value
 * @method date                getBirthday()         Returns the current record's "birthday" value
 * @method string              getTin()              Returns the current record's "tin" value
 * @method string              getPassport()         Returns the current record's "passport" value
 * @method string              getPhone()            Returns the current record's "phone" value
 * @method string              getAddress()          Returns the current record's "address" value
 * @method Doctrine_Collection getDepartmentPeople() Returns the current record's "DepartmentPeople" collection
 * @method Individual          setId()               Sets the current record's "id" value
 * @method Individual          setGuid()             Sets the current record's "guid" value
 * @method Individual          setFirstName()        Sets the current record's "first_name" value
 * @method Individual          setMiddleName()       Sets the current record's "middle_name" value
 * @method Individual          setLastName()         Sets the current record's "last_name" value
 * @method Individual          setBirthday()         Sets the current record's "birthday" value
 * @method Individual          setTin()              Sets the current record's "tin" value
 * @method Individual          setPassport()         Sets the current record's "passport" value
 * @method Individual          setPhone()            Sets the current record's "phone" value
 * @method Individual          setAddress()          Sets the current record's "address" value
 * @method Individual          setDepartmentPeople() Sets the current record's "DepartmentPeople" collection
 * 
 * @package    helpdesk
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseIndividual extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('individual');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('guid', 'string', 32, array(
             'type' => 'string',
             'length' => 32,
             ));
        $this->hasColumn('first_name', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('middle_name', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('last_name', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('birthday', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('tin', 'string', 12, array(
             'type' => 'string',
             'length' => 12,
             ));
        $this->hasColumn('passport', 'string', 8, array(
             'type' => 'string',
             'length' => 8,
             ));
        $this->hasColumn('phone', 'string', 32, array(
             'type' => 'string',
             'length' => 32,
             ));
        $this->hasColumn('address', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('DepartmentPeople', array(
             'local' => 'id',
             'foreign' => 'individual_id'));
    }
}