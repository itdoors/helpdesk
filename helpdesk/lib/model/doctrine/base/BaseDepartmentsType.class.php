<?php

/**
 * BaseDepartmentsType
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $slug
 * @property string $description
 * @property Doctrine_Collection $Departments
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method string              getName()        Returns the current record's "name" value
 * @method string              getSlug()        Returns the current record's "slug" value
 * @method string              getDescription() Returns the current record's "description" value
 * @method Doctrine_Collection getDepartments() Returns the current record's "Departments" collection
 * @method DepartmentsType     setId()          Sets the current record's "id" value
 * @method DepartmentsType     setName()        Sets the current record's "name" value
 * @method DepartmentsType     setSlug()        Sets the current record's "slug" value
 * @method DepartmentsType     setDescription() Sets the current record's "description" value
 * @method DepartmentsType     setDepartments() Sets the current record's "Departments" collection
 * 
 * @package    helpdesk
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDepartmentsType extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('departments_type');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('slug', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('departments as Departments', array(
             'local' => 'id',
             'foreign' => 'departments_type_id'));
    }
}