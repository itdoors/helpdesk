<?php

/**
 * Baseorganization
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $mpk
 * @property string $name
 * @property string $address
 * @property string $contacts
 * @property string $shortname
 * @property boolean $is_smeta
 * @property string $mailing_address
 * @property integer $organization_type_id
 * @property string $rs
 * @property string $edrpou
 * @property string $inn
 * @property string $certificate
 * @property string $short_description
 * @property string $site
 * @property integer $scope_id
 * @property integer $client_type_id
 * @property integer $city_id
 * @property OrganizationType $OrganizationType
 * @property Doctrine_Collection $Departments
 * @property lookup $Scope
 * @property lookup $ClientType
 * @property city $City
 * @property Doctrine_Collection $Dogovor
 * @property Doctrine_Collection $Handling
 * @property Doctrine_Collection $OrganizationUser
 * @property Doctrine_Collection $organization_importance
 * @property Doctrine_Collection $contract
 * @property Doctrine_Collection $departments
 * @property Doctrine_Collection $Client
 * @property Doctrine_Collection $client
 * @property Doctrine_Collection $ClientOrganization
 * @property Doctrine_Collection $contract_importance
 * 
 * @method integer             getId()                      Returns the current record's "id" value
 * @method string              getMpk()                     Returns the current record's "mpk" value
 * @method string              getName()                    Returns the current record's "name" value
 * @method string              getAddress()                 Returns the current record's "address" value
 * @method string              getContacts()                Returns the current record's "contacts" value
 * @method string              getShortname()               Returns the current record's "shortname" value
 * @method boolean             getIsSmeta()                 Returns the current record's "is_smeta" value
 * @method string              getMailingAddress()          Returns the current record's "mailing_address" value
 * @method integer             getOrganizationTypeId()      Returns the current record's "organization_type_id" value
 * @method string              getRs()                      Returns the current record's "rs" value
 * @method string              getEdrpou()                  Returns the current record's "edrpou" value
 * @method string              getInn()                     Returns the current record's "inn" value
 * @method string              getCertificate()             Returns the current record's "certificate" value
 * @method string              getShortDescription()        Returns the current record's "short_description" value
 * @method string              getSite()                    Returns the current record's "site" value
 * @method integer             getScopeId()                 Returns the current record's "scope_id" value
 * @method integer             getClientTypeId()            Returns the current record's "client_type_id" value
 * @method integer             getCityId()                  Returns the current record's "city_id" value
 * @method OrganizationType    getOrganizationType()        Returns the current record's "OrganizationType" value
 * @method Doctrine_Collection getDepartments()             Returns the current record's "Departments" collection
 * @method lookup              getScope()                   Returns the current record's "Scope" value
 * @method lookup              getClientType()              Returns the current record's "ClientType" value
 * @method city                getCity()                    Returns the current record's "City" value
 * @method Doctrine_Collection getDogovor()                 Returns the current record's "Dogovor" collection
 * @method Doctrine_Collection getHandling()                Returns the current record's "Handling" collection
 * @method Doctrine_Collection getOrganizationUser()        Returns the current record's "OrganizationUser" collection
 * @method Doctrine_Collection getOrganizationImportance()  Returns the current record's "organization_importance" collection
 * @method Doctrine_Collection getContract()                Returns the current record's "contract" collection
 * @method Doctrine_Collection getDepartments()             Returns the current record's "departments" collection
 * @method Doctrine_Collection getClient()                  Returns the current record's "Client" collection
 * @method Doctrine_Collection getClient()                  Returns the current record's "client" collection
 * @method Doctrine_Collection getClientOrganization()      Returns the current record's "ClientOrganization" collection
 * @method Doctrine_Collection getContractImportance()      Returns the current record's "contract_importance" collection
 * @method organization        setId()                      Sets the current record's "id" value
 * @method organization        setMpk()                     Sets the current record's "mpk" value
 * @method organization        setName()                    Sets the current record's "name" value
 * @method organization        setAddress()                 Sets the current record's "address" value
 * @method organization        setContacts()                Sets the current record's "contacts" value
 * @method organization        setShortname()               Sets the current record's "shortname" value
 * @method organization        setIsSmeta()                 Sets the current record's "is_smeta" value
 * @method organization        setMailingAddress()          Sets the current record's "mailing_address" value
 * @method organization        setOrganizationTypeId()      Sets the current record's "organization_type_id" value
 * @method organization        setRs()                      Sets the current record's "rs" value
 * @method organization        setEdrpou()                  Sets the current record's "edrpou" value
 * @method organization        setInn()                     Sets the current record's "inn" value
 * @method organization        setCertificate()             Sets the current record's "certificate" value
 * @method organization        setShortDescription()        Sets the current record's "short_description" value
 * @method organization        setSite()                    Sets the current record's "site" value
 * @method organization        setScopeId()                 Sets the current record's "scope_id" value
 * @method organization        setClientTypeId()            Sets the current record's "client_type_id" value
 * @method organization        setCityId()                  Sets the current record's "city_id" value
 * @method organization        setOrganizationType()        Sets the current record's "OrganizationType" value
 * @method organization        setDepartments()             Sets the current record's "Departments" collection
 * @method organization        setScope()                   Sets the current record's "Scope" value
 * @method organization        setClientType()              Sets the current record's "ClientType" value
 * @method organization        setCity()                    Sets the current record's "City" value
 * @method organization        setDogovor()                 Sets the current record's "Dogovor" collection
 * @method organization        setHandling()                Sets the current record's "Handling" collection
 * @method organization        setOrganizationUser()        Sets the current record's "OrganizationUser" collection
 * @method organization        setOrganizationImportance()  Sets the current record's "organization_importance" collection
 * @method organization        setContract()                Sets the current record's "contract" collection
 * @method organization        setDepartments()             Sets the current record's "departments" collection
 * @method organization        setClient()                  Sets the current record's "Client" collection
 * @method organization        setClient()                  Sets the current record's "client" collection
 * @method organization        setClientOrganization()      Sets the current record's "ClientOrganization" collection
 * @method organization        setContractImportance()      Sets the current record's "contract_importance" collection
 * 
 * @package    helpdesk
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Baseorganization extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('organization');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('mpk', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('address', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('contacts', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('shortname', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('is_smeta', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('mailing_address', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('organization_type_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('rs', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('edrpou', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('inn', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('certificate', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('short_description', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('site', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('scope_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('client_type_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('city_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('OrganizationType', array(
             'local' => 'organization_type_id',
             'foreign' => 'id'));

        $this->hasMany('departments as Departments', array(
             'local' => 'id',
             'foreign' => 'contract_id'));

        $this->hasOne('lookup as Scope', array(
             'local' => 'scope_id',
             'foreign' => 'id'));

        $this->hasOne('lookup as ClientType', array(
             'local' => 'client_type_id',
             'foreign' => 'id'));

        $this->hasOne('city as City', array(
             'local' => 'city_id',
             'foreign' => 'id'));

        $this->hasMany('Dogovor', array(
             'local' => 'id',
             'foreign' => 'organization_id'));

        $this->hasMany('Handling', array(
             'local' => 'id',
             'foreign' => 'organization_id'));

        $this->hasMany('OrganizationUser', array(
             'local' => 'id',
             'foreign' => 'organization_id'));

        $this->hasMany('organization_importance', array(
             'local' => 'id',
             'foreign' => 'organization_id'));

        $this->hasMany('contract', array(
             'local' => 'id',
             'foreign' => 'organization_id'));

        $this->hasMany('departments', array(
             'local' => 'id',
             'foreign' => 'organization_id'));

        $this->hasMany('client as Client', array(
             'local' => 'id',
             'foreign' => 'organization_id'));

        $this->hasMany('client', array(
             'refClass' => 'ClientOrganization',
             'local' => 'organization_id',
             'foreign' => 'client_id'));

        $this->hasMany('ClientOrganization', array(
             'local' => 'id',
             'foreign' => 'organization_id'));

        $this->hasMany('contract_importance', array(
             'local' => 'id',
             'foreign' => 'organization_id'));
    }
}