<?php

/**
 * BaseDogovorDepartment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $dogovor_id
 * @property integer $dop_dogovor_id
 * @property integer $department_id
 * @property integer $user_id
 * @property boolean $is_active
 * @property string $comment
 * @property timestamp $createdatetime
 * @property Dogovor $Dogovor
 * @property DopDogovor $DopDogovor
 * @property sfGuardUser $User
 * @property departments $Department
 * 
 * @method integer           getId()             Returns the current record's "id" value
 * @method integer           getDogovorId()      Returns the current record's "dogovor_id" value
 * @method integer           getDopDogovorId()   Returns the current record's "dop_dogovor_id" value
 * @method integer           getDepartmentId()   Returns the current record's "department_id" value
 * @method integer           getUserId()         Returns the current record's "user_id" value
 * @method boolean           getIsActive()       Returns the current record's "is_active" value
 * @method string            getComment()        Returns the current record's "comment" value
 * @method timestamp         getCreatedatetime() Returns the current record's "createdatetime" value
 * @method Dogovor           getDogovor()        Returns the current record's "Dogovor" value
 * @method DopDogovor        getDopDogovor()     Returns the current record's "DopDogovor" value
 * @method sfGuardUser       getUser()           Returns the current record's "User" value
 * @method departments       getDepartment()     Returns the current record's "Department" value
 * @method DogovorDepartment setId()             Sets the current record's "id" value
 * @method DogovorDepartment setDogovorId()      Sets the current record's "dogovor_id" value
 * @method DogovorDepartment setDopDogovorId()   Sets the current record's "dop_dogovor_id" value
 * @method DogovorDepartment setDepartmentId()   Sets the current record's "department_id" value
 * @method DogovorDepartment setUserId()         Sets the current record's "user_id" value
 * @method DogovorDepartment setIsActive()       Sets the current record's "is_active" value
 * @method DogovorDepartment setComment()        Sets the current record's "comment" value
 * @method DogovorDepartment setCreatedatetime() Sets the current record's "createdatetime" value
 * @method DogovorDepartment setDogovor()        Sets the current record's "Dogovor" value
 * @method DogovorDepartment setDopDogovor()     Sets the current record's "DopDogovor" value
 * @method DogovorDepartment setUser()           Sets the current record's "User" value
 * @method DogovorDepartment setDepartment()     Sets the current record's "Department" value
 * 
 * @package    helpdesk
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDogovorDepartment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('dogovor_department');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('dogovor_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('dop_dogovor_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('department_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('comment', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('createdatetime', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Dogovor', array(
             'local' => 'dogovor_id',
             'foreign' => 'id'));

        $this->hasOne('DopDogovor', array(
             'local' => 'dop_dogovor_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasOne('departments as Department', array(
             'local' => 'department_id',
             'foreign' => 'id'));
    }
}