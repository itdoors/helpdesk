<?php

/**
 * BaseGrafikTime
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $year
 * @property integer $month
 * @property integer $day
 * @property integer $department_id
 * @property integer $department_people_id
 * @property integer $department_people_replacement_id
 * @property time $from_time
 * @property time $to_time
 * @property boolean $not_officially
 * @property float $total
 * @property float $total_day
 * @property float $total_evening
 * @property float $total_night
 * @property float $total_not_officially
 * @property float $total_day_not_officially
 * @property float $total_evening_not_officially
 * @property float $total_night_not_officially
 * @property departments $Department
 * @property DepartmentPeople $DepartmentPeople
 * @property DepartmentPeople $DepartmentPeopleReplacement
 * 
 * @method integer          getId()                               Returns the current record's "id" value
 * @method integer          getYear()                             Returns the current record's "year" value
 * @method integer          getMonth()                            Returns the current record's "month" value
 * @method integer          getDay()                              Returns the current record's "day" value
 * @method integer          getDepartmentId()                     Returns the current record's "department_id" value
 * @method integer          getDepartmentPeopleId()               Returns the current record's "department_people_id" value
 * @method integer          getDepartmentPeopleReplacementId()    Returns the current record's "department_people_replacement_id" value
 * @method time             getFromTime()                         Returns the current record's "from_time" value
 * @method time             getToTime()                           Returns the current record's "to_time" value
 * @method boolean          getNotOfficially()                    Returns the current record's "not_officially" value
 * @method float            getTotal()                            Returns the current record's "total" value
 * @method float            getTotalDay()                         Returns the current record's "total_day" value
 * @method float            getTotalEvening()                     Returns the current record's "total_evening" value
 * @method float            getTotalNight()                       Returns the current record's "total_night" value
 * @method float            getTotalNotOfficially()               Returns the current record's "total_not_officially" value
 * @method float            getTotalDayNotOfficially()            Returns the current record's "total_day_not_officially" value
 * @method float            getTotalEveningNotOfficially()        Returns the current record's "total_evening_not_officially" value
 * @method float            getTotalNightNotOfficially()          Returns the current record's "total_night_not_officially" value
 * @method departments      getDepartment()                       Returns the current record's "Department" value
 * @method DepartmentPeople getDepartmentPeople()                 Returns the current record's "DepartmentPeople" value
 * @method DepartmentPeople getDepartmentPeopleReplacement()      Returns the current record's "DepartmentPeopleReplacement" value
 * @method GrafikTime       setId()                               Sets the current record's "id" value
 * @method GrafikTime       setYear()                             Sets the current record's "year" value
 * @method GrafikTime       setMonth()                            Sets the current record's "month" value
 * @method GrafikTime       setDay()                              Sets the current record's "day" value
 * @method GrafikTime       setDepartmentId()                     Sets the current record's "department_id" value
 * @method GrafikTime       setDepartmentPeopleId()               Sets the current record's "department_people_id" value
 * @method GrafikTime       setDepartmentPeopleReplacementId()    Sets the current record's "department_people_replacement_id" value
 * @method GrafikTime       setFromTime()                         Sets the current record's "from_time" value
 * @method GrafikTime       setToTime()                           Sets the current record's "to_time" value
 * @method GrafikTime       setNotOfficially()                    Sets the current record's "not_officially" value
 * @method GrafikTime       setTotal()                            Sets the current record's "total" value
 * @method GrafikTime       setTotalDay()                         Sets the current record's "total_day" value
 * @method GrafikTime       setTotalEvening()                     Sets the current record's "total_evening" value
 * @method GrafikTime       setTotalNight()                       Sets the current record's "total_night" value
 * @method GrafikTime       setTotalNotOfficially()               Sets the current record's "total_not_officially" value
 * @method GrafikTime       setTotalDayNotOfficially()            Sets the current record's "total_day_not_officially" value
 * @method GrafikTime       setTotalEveningNotOfficially()        Sets the current record's "total_evening_not_officially" value
 * @method GrafikTime       setTotalNightNotOfficially()          Sets the current record's "total_night_not_officially" value
 * @method GrafikTime       setDepartment()                       Sets the current record's "Department" value
 * @method GrafikTime       setDepartmentPeople()                 Sets the current record's "DepartmentPeople" value
 * @method GrafikTime       setDepartmentPeopleReplacement()      Sets the current record's "DepartmentPeopleReplacement" value
 * 
 * @package    helpdesk
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseGrafikTime extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('grafik_time');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('year', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('month', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('day', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('department_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => 'truer',
             ));
        $this->hasColumn('department_people_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('department_people_replacement_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('from_time', 'time', null, array(
             'type' => 'time',
             ));
        $this->hasColumn('to_time', 'time', null, array(
             'type' => 'time',
             ));
        $this->hasColumn('not_officially', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('total', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('total_day', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('total_evening', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('total_night', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('total_not_officially', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('total_day_not_officially', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('total_evening_not_officially', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('total_night_not_officially', 'float', null, array(
             'type' => 'float',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('departments as Department', array(
             'local' => 'department_id',
             'foreign' => 'id'));

        $this->hasOne('DepartmentPeople', array(
             'local' => 'department_people_id',
             'foreign' => 'id'));

        $this->hasOne('DepartmentPeople as DepartmentPeopleReplacement', array(
             'local' => 'department_people_replacement_id',
             'foreign' => 'id'));
    }
}