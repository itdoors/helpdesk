<?php

/**
 * Baseclient
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $phone
 * @property string $mobilephone
 * @property integer $user_id
 * @property integer $organization_id
 * @property boolean $show_added_field
 * @property boolean $is_mailed
 * @property sfGuardUser $Users
 * @property organization $Organization
 * @property Doctrine_Collection $Organizations
 * @property Doctrine_Collection $Departments
 * @property Doctrine_Collection $Groupclaim
 * @property Doctrine_Collection $ClientOrganization
 * @property Doctrine_Collection $ClientDepartments
 * 
 * @method integer             getId()                 Returns the current record's "id" value
 * @method string              getPhone()              Returns the current record's "phone" value
 * @method string              getMobilephone()        Returns the current record's "mobilephone" value
 * @method integer             getUserId()             Returns the current record's "user_id" value
 * @method integer             getOrganizationId()     Returns the current record's "organization_id" value
 * @method boolean             getShowAddedField()     Returns the current record's "show_added_field" value
 * @method boolean             getIsMailed()           Returns the current record's "is_mailed" value
 * @method sfGuardUser         getUsers()              Returns the current record's "Users" value
 * @method organization        getOrganization()       Returns the current record's "Organization" value
 * @method Doctrine_Collection getOrganizations()      Returns the current record's "Organizations" collection
 * @method Doctrine_Collection getDepartments()        Returns the current record's "Departments" collection
 * @method Doctrine_Collection getGroupclaim()         Returns the current record's "Groupclaim" collection
 * @method Doctrine_Collection getClientOrganization() Returns the current record's "ClientOrganization" collection
 * @method Doctrine_Collection getClientDepartments()  Returns the current record's "ClientDepartments" collection
 * @method client              setId()                 Sets the current record's "id" value
 * @method client              setPhone()              Sets the current record's "phone" value
 * @method client              setMobilephone()        Sets the current record's "mobilephone" value
 * @method client              setUserId()             Sets the current record's "user_id" value
 * @method client              setOrganizationId()     Sets the current record's "organization_id" value
 * @method client              setShowAddedField()     Sets the current record's "show_added_field" value
 * @method client              setIsMailed()           Sets the current record's "is_mailed" value
 * @method client              setUsers()              Sets the current record's "Users" value
 * @method client              setOrganization()       Sets the current record's "Organization" value
 * @method client              setOrganizations()      Sets the current record's "Organizations" collection
 * @method client              setDepartments()        Sets the current record's "Departments" collection
 * @method client              setGroupclaim()         Sets the current record's "Groupclaim" collection
 * @method client              setClientOrganization() Sets the current record's "ClientOrganization" collection
 * @method client              setClientDepartments()  Sets the current record's "ClientDepartments" collection
 * 
 * @package    helpdesk
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Baseclient extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('client');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('phone', 'string', 12, array(
             'type' => 'string',
             'length' => 12,
             ));
        $this->hasColumn('mobilephone', 'string', 12, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 12,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'unique' => true,
             'notnull' => true,
             'type' => 'integer',
             ));
        $this->hasColumn('organization_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('show_added_field', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('is_mailed', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as Users', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasOne('organization as Organization', array(
             'local' => 'organization_id',
             'foreign' => 'id'));

        $this->hasMany('organization as Organizations', array(
             'refClass' => 'ClientOrganization',
             'local' => 'client_id',
             'foreign' => 'organization_id'));

        $this->hasMany('departments as Departments', array(
             'refClass' => 'client_departments',
             'local' => 'client_id',
             'foreign' => 'departments_id'));

        $this->hasMany('Groupclaim', array(
             'local' => 'id',
             'foreign' => 'client_id'));

        $this->hasMany('ClientOrganization', array(
             'local' => 'id',
             'foreign' => 'client_id'));

        $this->hasMany('client_departments as ClientDepartments', array(
             'local' => 'id',
             'foreign' => 'client_id'));
    }
}