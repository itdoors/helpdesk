<?php

/**
 * Basecompanystructure_region
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $companystructure_id
 * @property integer $region_id
 * @property companystructure $Companystructure
 * @property region $Region
 * 
 * @method integer                 getCompanystructureId()  Returns the current record's "companystructure_id" value
 * @method integer                 getRegionId()            Returns the current record's "region_id" value
 * @method companystructure        getCompanystructure()    Returns the current record's "Companystructure" value
 * @method region                  getRegion()              Returns the current record's "Region" value
 * @method companystructure_region setCompanystructureId()  Sets the current record's "companystructure_id" value
 * @method companystructure_region setRegionId()            Sets the current record's "region_id" value
 * @method companystructure_region setCompanystructure()    Sets the current record's "Companystructure" value
 * @method companystructure_region setRegion()              Sets the current record's "Region" value
 * 
 * @package    helpdesk
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Basecompanystructure_region extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('companystructure_region');
        $this->hasColumn('companystructure_id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             ));
        $this->hasColumn('region_id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('companystructure as Companystructure', array(
             'local' => 'companystructure_id',
             'foreign' => 'id'));

        $this->hasOne('region as Region', array(
             'local' => 'region_id',
             'foreign' => 'id'));
    }
}