<?php

/**
 * Basecontract
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $fileupload
 * @property integer $organization_id
 * @property date $createdate
 * @property date $closedate
 * @property organization $organization
 * @property Doctrine_Collection $Departments
 * @property Doctrine_Collection $Importance
 * @property Doctrine_Collection $contract_importance
 * 
 * @method integer             getId()                  Returns the current record's "id" value
 * @method string              getName()                Returns the current record's "name" value
 * @method string              getFileupload()          Returns the current record's "fileupload" value
 * @method integer             getOrganizationId()      Returns the current record's "organization_id" value
 * @method date                getCreatedate()          Returns the current record's "createdate" value
 * @method date                getClosedate()           Returns the current record's "closedate" value
 * @method organization        getOrganization()        Returns the current record's "organization" value
 * @method Doctrine_Collection getDepartments()         Returns the current record's "Departments" collection
 * @method Doctrine_Collection getImportance()          Returns the current record's "Importance" collection
 * @method Doctrine_Collection getContractImportance()  Returns the current record's "contract_importance" collection
 * @method contract            setId()                  Sets the current record's "id" value
 * @method contract            setName()                Sets the current record's "name" value
 * @method contract            setFileupload()          Sets the current record's "fileupload" value
 * @method contract            setOrganizationId()      Sets the current record's "organization_id" value
 * @method contract            setCreatedate()          Sets the current record's "createdate" value
 * @method contract            setClosedate()           Sets the current record's "closedate" value
 * @method contract            setOrganization()        Sets the current record's "organization" value
 * @method contract            setDepartments()         Sets the current record's "Departments" collection
 * @method contract            setImportance()          Sets the current record's "Importance" collection
 * @method contract            setContractImportance()  Sets the current record's "contract_importance" collection
 * 
 * @package    helpdesk
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Basecontract extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('contract');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('fileupload', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('organization_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('createdate', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('closedate', 'date', null, array(
             'type' => 'date',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('organization', array(
             'local' => 'organization_id',
             'foreign' => 'id'));

        $this->hasMany('departments as Departments', array(
             'local' => 'id',
             'foreign' => 'contract_id'));

        $this->hasMany('importance as Importance', array(
             'refClass' => 'contract_importance',
             'local' => 'contract_id',
             'foreign' => 'importance_id'));

        $this->hasMany('contract_importance', array(
             'local' => 'id',
             'foreign' => 'contract_id'));
    }
}