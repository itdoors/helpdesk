<?php

/**
 * Baseworkstypes
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $parent_id
 * @property string $name
 * @property workstypes $workstypes
 * @property Doctrine_Collection $works
 * 
 * @method integer             getId()         Returns the current record's "id" value
 * @method integer             getParentId()   Returns the current record's "parent_id" value
 * @method string              getName()       Returns the current record's "name" value
 * @method workstypes          getWorkstypes() Returns the current record's "workstypes" value
 * @method Doctrine_Collection getWorks()      Returns the current record's "works" collection
 * @method workstypes          setId()         Sets the current record's "id" value
 * @method workstypes          setParentId()   Sets the current record's "parent_id" value
 * @method workstypes          setName()       Sets the current record's "name" value
 * @method workstypes          setWorkstypes() Sets the current record's "workstypes" value
 * @method workstypes          setWorks()      Sets the current record's "works" collection
 * 
 * @package    helpdesk
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Baseworkstypes extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('workstypes');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('parent_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('workstypes', array(
             'local' => 'parent_id',
             'foreign' => 'id'));

        $this->hasMany('works', array(
             'local' => 'id',
             'foreign' => 'workstypes_id'));
    }
}