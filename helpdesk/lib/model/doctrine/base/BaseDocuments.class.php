<?php

/**
 * BaseDocuments
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property timestamp $datetime
 * @property timestamp $createdatetime
 * @property integer $documentstype_id
 * @property string $filepath
 * @property integer $user_id
 * @property Doctrine_Collection $Claim
 * @property Documentstype $Documentstype
 * @property sfGuardUser $Users
 * @property Doctrine_Collection $DocumentsClaim
 * 
 * @method integer             getId()               Returns the current record's "id" value
 * @method string              getName()             Returns the current record's "name" value
 * @method timestamp           getDatetime()         Returns the current record's "datetime" value
 * @method timestamp           getCreatedatetime()   Returns the current record's "createdatetime" value
 * @method integer             getDocumentstypeId()  Returns the current record's "documentstype_id" value
 * @method string              getFilepath()         Returns the current record's "filepath" value
 * @method integer             getUserId()           Returns the current record's "user_id" value
 * @method Doctrine_Collection getClaim()            Returns the current record's "Claim" collection
 * @method Documentstype       getDocumentstype()    Returns the current record's "Documentstype" value
 * @method sfGuardUser         getUsers()            Returns the current record's "Users" value
 * @method Doctrine_Collection getDocumentsClaim()   Returns the current record's "DocumentsClaim" collection
 * @method Documents           setId()               Sets the current record's "id" value
 * @method Documents           setName()             Sets the current record's "name" value
 * @method Documents           setDatetime()         Sets the current record's "datetime" value
 * @method Documents           setCreatedatetime()   Sets the current record's "createdatetime" value
 * @method Documents           setDocumentstypeId()  Sets the current record's "documentstype_id" value
 * @method Documents           setFilepath()         Sets the current record's "filepath" value
 * @method Documents           setUserId()           Sets the current record's "user_id" value
 * @method Documents           setClaim()            Sets the current record's "Claim" collection
 * @method Documents           setDocumentstype()    Sets the current record's "Documentstype" value
 * @method Documents           setUsers()            Sets the current record's "Users" value
 * @method Documents           setDocumentsClaim()   Sets the current record's "DocumentsClaim" collection
 * 
 * @package    helpdesk
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDocuments extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('documents');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('datetime', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('createdatetime', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('documentstype_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('filepath', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('claim as Claim', array(
             'refClass' => 'DocumentsClaim',
             'local' => 'documents_id',
             'foreign' => 'claim_id'));

        $this->hasOne('Documentstype', array(
             'local' => 'documentstype_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as Users', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasMany('DocumentsClaim', array(
             'local' => 'id',
             'foreign' => 'documents_id'));
    }
}