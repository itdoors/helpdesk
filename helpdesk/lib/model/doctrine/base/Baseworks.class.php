<?php

/**
 * Baseworks
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property float $income_nonnds
 * @property float $costs_n
 * @property float $costs_nonnds
 * @property integer $status_id
 * @property integer $workstypes_id
 * @property status $Status
 * @property workstypes $workstypes
 * @property Doctrine_Collection $Claim
 * @property Doctrine_Collection $claim_works
 * 
 * @method integer             getId()            Returns the current record's "id" value
 * @method string              getName()          Returns the current record's "name" value
 * @method float               getIncomeNonnds()  Returns the current record's "income_nonnds" value
 * @method float               getCostsN()        Returns the current record's "costs_n" value
 * @method float               getCostsNonnds()   Returns the current record's "costs_nonnds" value
 * @method integer             getStatusId()      Returns the current record's "status_id" value
 * @method integer             getWorkstypesId()  Returns the current record's "workstypes_id" value
 * @method status              getStatus()        Returns the current record's "Status" value
 * @method workstypes          getWorkstypes()    Returns the current record's "workstypes" value
 * @method Doctrine_Collection getClaim()         Returns the current record's "Claim" collection
 * @method Doctrine_Collection getClaimWorks()    Returns the current record's "claim_works" collection
 * @method works               setId()            Sets the current record's "id" value
 * @method works               setName()          Sets the current record's "name" value
 * @method works               setIncomeNonnds()  Sets the current record's "income_nonnds" value
 * @method works               setCostsN()        Sets the current record's "costs_n" value
 * @method works               setCostsNonnds()   Sets the current record's "costs_nonnds" value
 * @method works               setStatusId()      Sets the current record's "status_id" value
 * @method works               setWorkstypesId()  Sets the current record's "workstypes_id" value
 * @method works               setStatus()        Sets the current record's "Status" value
 * @method works               setWorkstypes()    Sets the current record's "workstypes" value
 * @method works               setClaim()         Sets the current record's "Claim" collection
 * @method works               setClaimWorks()    Sets the current record's "claim_works" collection
 * 
 * @package    helpdesk
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Baseworks extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('works');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'unique' => true,
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('income_nonnds', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('costs_n', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('costs_nonnds', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('status_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('workstypes_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('status as Status', array(
             'local' => 'status_id',
             'foreign' => 'id'));

        $this->hasOne('workstypes', array(
             'local' => 'workstypes_id',
             'foreign' => 'id'));

        $this->hasMany('claim as Claim', array(
             'refClass' => 'claim_works',
             'local' => 'works_id',
             'foreign' => 'claim_id'));

        $this->hasMany('claim_works', array(
             'local' => 'id',
             'foreign' => 'works_id'));
    }
}