<?php

/**
 * contract_importanceTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class contract_importanceTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object contract_importanceTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('contract_importance');
    }
    
    public function getImportanceForDispatcher($claim)
    {
        
        $contract_id = $claim->getOrganization()->getContract()->getPrimaryKeys();
       
        return Doctrine::getTable('contract_importance')
        ->createQuery('c')
        ->whereIn('contract_id ', $contract_id)
        ->execute();    
    }
    
    public function getImportanceForThisContract()
    {
        $user_id = sfContext::getInstance()->getUser()->getAttribute('user_id',null, 'sfGuardSecurityUser');
        $client = Doctrine::getTable('client')
        ->createQuery('c')
        ->where('user_id ='.$user_id)
        ->fetchOne();
        $contract_id = $client->getOrganization()->getContract()->getPrimaryKeys();
       
        return Doctrine::getTable('contract_importance')
        ->createQuery('c')
        ->whereIn('contract_id ', $contract_id)
        ->execute();    
    }
    
    
    public function getImportanceByOrganization($org_id)
    {
        $contract_ids = Doctrine::getTable('Contract')
        ->createQuery('c')
        ->where('c.organization_id = '.$org_id)
        ->execute()->getPrimaryKeys();
       
        return Doctrine::getTable('contract_importance')
        ->createQuery('c')
        ->whereIn('c.contract_id', $contract_ids)
        ->execute();    
    }
    
    
    public function getContractImportanceQuery($refValue)
    {
        $contract_ids = Doctrine::getTable('Contract')
        ->createQuery('c')
        ->where('c.organization_id = '.$refValue)
        ->execute()->getPrimaryKeys();
        
        return $this->createQuery('ci')
        ->leftJoin('ci.importance imp')
        ->whereIn('ci.contract_id', $contract_ids);
        
        /*return $this->createQuery('ci')
        ->leftJoin('ci.contract contr')
        ->leftJoin('contr.organization org')
        ->where('org.id = '.$refValue);*/
    }
    
    
    public function NoInfo()
    {
        return Null;
    }
}