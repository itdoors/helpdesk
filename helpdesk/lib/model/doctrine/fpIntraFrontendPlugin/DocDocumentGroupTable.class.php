<?php

/**
 * DocDocumentGroupTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class DocDocumentGroupTable extends PluginDocDocumentGroupTable
{
    /**
     * Returns an instance of this class.
     *
     * @return object DocDocumentGroupTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('DocDocumentGroup');
    }
    
    public function getAllRootCategory()
    {
        
        return Doctrine::getTable('DocDocumentGroup')
        ->createQuery('d')
        ->where('d.parent_id is Null')
        ->orderBy('d.id ASC')
        ->execute();
    } 
    
   public function getCategoryByParentId($parent_id)
   {
       
       if (!$parent_id) return $this->getAllRootCategory();
       return Doctrine::getTable('DocDocumentGroup')
        ->createQuery('d')
        ->where('d.parent_id = '.$parent_id)
        ->execute();
   }
   
   public function getParentTree()
   {
       $q = Doctrine::getTable('DocDocumentGroup')
        ->createQuery('d')
        ->orderBy('d.id')
        ->execute();
       $arr = array(); 
       $level = 0;
       $this->getAllPatents($q, null, $arr, $level);
       return $arr;
        
        
   }   
   
   public function getAllPatents(&$q = array(), $parent_id, &$arr, &$level)
   {
       reset($q);
       $level++;
       foreach ($q as $key => $value)
       {
           if ($value->getParentId() == $parent_id)
           {
               $value->setLevel($level);
               $arr[] = $value;
               unset($q[$key]);
               $new_parent = $value->getId();
               $this->getAllPatents($q, $new_parent, $arr, $level);
           }  
       }
       reset($q);
       $level--;
       
   }
   
}