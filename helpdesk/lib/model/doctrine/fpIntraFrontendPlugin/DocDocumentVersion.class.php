<?php

/**
 * DocDocumentVersion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    helpdesk
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class DocDocumentVersion extends PluginDocDocumentVersion
{
   public function save(Doctrine_Connection $conn = null)
   {
       if ($this->isNew())
       {
          $user_id = sfContext::getInstance()->getUser()->getAttribute('user_id',null, 'sfGuardSecurityUser');
          $this->setCreatedatetime(date("Y-m-d H:i:s"));
          $this->setUserId($user_id);
       }
       parent::save();
       LogIntranet::SaveLog($this);
   }
   public function delete(Doctrine_Connection $conn = null)
   {
       $this->setIsdeleted(true);
       parent::save();
       LogIntranet::SaveLog($this);
   }

  public function hardDelete(Doctrine_Connection $conn = null)
  {
    parent::delete();
  }
   
   public function restore(Doctrine_Connection $conn = null)
   {
       $this->setIsdeleted(false);
       parent::save();
       LogIntranet::SaveLog($this);
   }
   
   public function getMimeClass()
   {
       $mime_type = $this->getMimeType();
       if (!$mime_type) return '';
       $mime_array = array 
       (
         'image/jpeg' => 'mime image',
         'application/msword' => 'mime word',
         'application/pdf' => 'mime pdf',
         'application/vnd.ms-excel' => 'mime excel',
         'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' => 'mime excel',
         'application/vnd.openxmlformats-officedocument.presentationml.presentation' => 'mime pp',
         'application/vnd.ms-powerpoint' => 'mime pp',
         'application/x-rar' => 'mime rar',
         'application/zip' => 'mime zip',
         'application/x-zip' => 'mime zip',
       );
       if (isset($mime_array[$mime_type])) return  $mime_array[$mime_type];
       return '';
   }
}