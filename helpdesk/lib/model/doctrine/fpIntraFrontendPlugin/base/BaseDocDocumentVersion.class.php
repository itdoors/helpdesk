<?php

/**
 * BaseDocDocumentVersion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $filepath
 * @property string $mime_type
 * @property timestamp $createdatetime
 * @property integer $user_id
 * @property integer $document_id
 * @property boolean $isdeleted
 * @property sfGuardUser $Users
 * @property DocDocument $DocDocument
 * @property Doctrine_Collection $LogIntranet
 * 
 * @method integer             getId()             Returns the current record's "id" value
 * @method string              getName()           Returns the current record's "name" value
 * @method string              getFilepath()       Returns the current record's "filepath" value
 * @method string              getMimeType()       Returns the current record's "mime_type" value
 * @method timestamp           getCreatedatetime() Returns the current record's "createdatetime" value
 * @method integer             getUserId()         Returns the current record's "user_id" value
 * @method integer             getDocumentId()     Returns the current record's "document_id" value
 * @method boolean             getIsdeleted()      Returns the current record's "isdeleted" value
 * @method sfGuardUser         getUsers()          Returns the current record's "Users" value
 * @method DocDocument         getDocDocument()    Returns the current record's "DocDocument" value
 * @method Doctrine_Collection getLogIntranet()    Returns the current record's "LogIntranet" collection
 * @method DocDocumentVersion  setId()             Sets the current record's "id" value
 * @method DocDocumentVersion  setName()           Sets the current record's "name" value
 * @method DocDocumentVersion  setFilepath()       Sets the current record's "filepath" value
 * @method DocDocumentVersion  setMimeType()       Sets the current record's "mime_type" value
 * @method DocDocumentVersion  setCreatedatetime() Sets the current record's "createdatetime" value
 * @method DocDocumentVersion  setUserId()         Sets the current record's "user_id" value
 * @method DocDocumentVersion  setDocumentId()     Sets the current record's "document_id" value
 * @method DocDocumentVersion  setIsdeleted()      Sets the current record's "isdeleted" value
 * @method DocDocumentVersion  setUsers()          Sets the current record's "Users" value
 * @method DocDocumentVersion  setDocDocument()    Sets the current record's "DocDocument" value
 * @method DocDocumentVersion  setLogIntranet()    Sets the current record's "LogIntranet" collection
 * 
 * @package    helpdesk
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDocDocumentVersion extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('doc_document_version');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('filepath', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('mime_type', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('createdatetime', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('document_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('isdeleted', 'boolean', null, array(
             'default' => false,
             'type' => 'boolean',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as Users', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasOne('DocDocument', array(
             'local' => 'document_id',
             'foreign' => 'id'));

        $this->hasMany('LogIntranet', array(
             'local' => 'id',
             'foreign' => 'obj_id'));
    }
}